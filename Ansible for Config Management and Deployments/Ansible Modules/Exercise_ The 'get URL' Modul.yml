1. Verify that your ansible installation is available by displaying the version of ansible while logged in as the 'user' user.
[test@tcox3 ~]$ ansible --version
ansible 1.9.2
  configured module search path = None
 
2. Run the ansible command that lists all of the hosts configured in your control server 'hosts' file for the system.
[test@tcox3 ~]$ ansible all --list-hosts
    tcox5.mylabserver.com
    localhost
    tcox4.mylabserver.com
 
3. Create a playbook, using the 'get_url' module that accomplishes the following:
- Uses SSH
- Logs in to the remote system as 'test' user
- Connects to all the hosts from Step #2 above
- The playbook runs as 'sudo'
- Skip gathering remote facts
- Downloads a file from any remote web server and places that file into the /home/test directory with 440 permissions.
[test@tcox3 Playbooks]$ vim geturl.yml
[test@tcox3 Playbooks]$ cat geturl.yml
--- # GET_URL MODULE EXAMPLE
- hosts: aptserver
  user: test
  sudo: yes
  connection: ssh
  gather_facts: no
  tasks:
    - name: Get and download the INI file from the web server
      get_url: url=http://tcox1.mylabserver.com/mytest.ini dest=/home/test/mytest.ini mode=0440
 
4. Run the playbook and display the results.
[test@tcox3 Playbooks]$ ansible-playbook geturl.yml
 
PLAY [aptserver] **************************************************************
 
TASK: [Get and download the INI file from the web server] *********************
ok: [tcox1.mylabserver.com]
 
PLAY RECAP ********************************************************************
tcox1.mylabserver.com      : ok=1    changed=0    unreachable=0    failed=0
 
[test@tcox3 Playbooks]$ ssh tcox
test@tcox1:~$ ls -al test.ini
-r--r----- 1 root root 36 Oct 16 00:19 test.ini