1. Verify that your ansible installation is available by displaying the version of ansible while logged in as the 'user' user.
[test@tcox3 ~]$ ansible --version
ansible 1.9.2
  configured module search path = None
 
2. Run the ansible command that lists all of the hosts configured in your control server 'hosts' file for the system.
[test@tcox3 ~]$ ansible all --list-hosts
    tcox5.mylabserver.com
    localhost
    tcox4.mylabserver.com
 
3. Create a playbook, using the 'htpasswd' module that accomplishes the following:
- Uses SSH
- Logs in to the remote system as 'test' user
- Connects to all the hosts from Step #2 above
- The playbook runs as 'sudo'
- Skip gathering remote facts
- Install the 'python-passlib' package as appropriate to the server or group in Step #2 above
- Create a user called 'test' in the web site authentication file called .htpasswd on the remote system in Step #2 above
[test@tcox3 Playbooks]$ vim htpasswd.yml
[test@tcox3 Playbooks]$ cat htpasswd.yml
--- # HTPASSWD MODULE EXAMPLE
- hosts: aptserver
  user: test
  sudo: yes
  connection: ssh
  gather_facts: no
  tasks:
    - name: Install the python dependencies
      apt: pkg=python-passlib state=latest
    - name: Adding a user to web site authentication
      htpasswd: path=/etc/apache2/.htpasswd name=test2 state=present
 
4. Run the playbook and display the results.
[test@tcox3 Playbooks]$ ansible-playbook htpasswd.yml
 
PLAY [aptserver] **************************************************************
 
TASK: [Install the python dependencies] ***************************************
ok: [tcox1.mylabserver.com]
 
TASK: [Adding a user to web site authentication] ******************************
ok: [tcox1.mylabserver.com]
 
PLAY RECAP ********************************************************************
 
tcox1.mylabserver.com      : ok=1    changed=1    unreachable=0    failed=0