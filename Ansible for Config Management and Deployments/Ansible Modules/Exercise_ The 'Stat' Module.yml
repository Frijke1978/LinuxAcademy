1. Verify that your ansible installation is available by displaying the version of ansible while logged in as the 'user' user.
[test@tcox3 ~]$ ansible --version
ansible 1.9.2
  configured module search path = None
 
2. Run the ansible command that lists all of the hosts configured in your control server 'hosts' file for the system.
[test@tcox3 ~]$ ansible all --list-hosts
    tcox5.mylabserver.com
    localhost
    tcox4.mylabserver.com
 
3. Create a playbook, using the 'stat' module that accomplishes the following:
- Uses SSH
- Logs in to the remote system as 'test' user
- Connects to one server or group from Step #2 above
- The playbook runs as 'sudo'
- Skip gathering remote facts
- Test for an arbitrary directory path in the remote /home/test directory, display a message using debug ONLY if the path exists
[test@tcox3 Playbooks]$ vim stat.yml
[test@tcox3 Playbooks]$ cat stat.yml
--- # STAT MODULE EXAMPLE
- hosts: apacheweb
  user: test
  sudo: yes
  connection: ssh
  gather_facts: no
  tasks:
  - stat: path=/home/test/abc
    register: p
  - debug: msg="The Path Exists and is a Directory"
    when: p.stat.isdir is defined and p.stat.isdir
 
4. Run the playbook and display the results.
[test@tcox3 Playbooks]$ ansible-playbook stat.yml
 
PLAY [apacheweb] **************************************************************
 
TASK: [stat path=/home/test/abc] **********************************************
ok: [tcox4.mylabserver.com]
 
TASK: [debug msg="The Path Exists and is a Directory"] ************************
skipping: [tcox4.mylabserver.com]
 
PLAY RECAP ********************************************************************
tcox4.mylabserver.com      : ok=1    changed=0    unreachable=0    failed=0