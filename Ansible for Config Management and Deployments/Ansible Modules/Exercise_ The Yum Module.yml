1. Verify that your ansible installation is available by displaying the version of ansible while logged in as the 'user' user.

    [test@tcox3 ~]$ ansible --version

    ansible 1.9.2

      configured module search path = None

 

2. Run the ansible command that lists all of the hosts configured in your control server 'hosts' file for the system.

    [test@tcox3 ~]$ ansible all --list-hosts

        tcox5.mylabserver.com

        localhost

        tcox4.mylabserver.com

     

3. Create a playbook, using the 'yum' module that accomplishes the following:

- Uses SSH

- Logs in to the remote system as 'test' user

- Connects to one server or group from Step #2 above

- The playbook runs as 'sudo'

- Updates ALL packages on the remote system

    [test@tcox3 Playbooks]$ vim yum.yml

    [test@tcox3 Playbooks]$ cat yum.yml

    --- # Yum Module Example

    - hosts: apacheweb

      user: test

      sudo: yes

      connection: ssh

      gather_facts: no

      tasks:

      - name: Equivalent of YUM UPGRADE

        action: yum name=* state=latest

 

4. Run the playbook and display the results.

    [test@tcox3 Playbooks]$ ansible-playbook yum.yml

     

    PLAY [apacheweb] **************************************************************

     

    TASK: [Equivalent of YUM UPGRADE] *********************************************

    ok: [tcox4.mylabserver.com]

     

    PLAY RECAP ********************************************************************

    tcox4.mylabserver.com      : ok=1    changed=0    unreachable=0    failed=0
