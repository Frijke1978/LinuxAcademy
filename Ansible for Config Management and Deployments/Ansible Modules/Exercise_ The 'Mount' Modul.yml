1. Verify that your ansible installation is available by displaying the version of ansible while logged in as the 'user' user.
[test@tcox3 ~]$ ansible --version
ansible 1.9.2
  configured module search path = None
 
2. Run the ansible command that lists all of the hosts configured in your control server 'hosts' file for the system.
[test@tcox3 ~]$ ansible all --list-hosts
    tcox5.mylabserver.com
    localhost
    tcox4.mylabserver.com
 
3. Create a playbook, using the 'mount' module that accomplishes the following:
- Uses SSH
- Logs in to the remote system as 'test' user
- Connects to all the hosts from Step #2 above
- The playbook runs as 'sudo'
- Skip gathering remote facts
- Mount the filesystem device that was formatted in the previous 'filesystem' exercise (see the NOTE above for more information) in the /mnt/data directory, make sure you indicate the ext3 filesystem and mount it explicitly 'read/write'
[test@tcox3 Playbooks]$ vim mount.yml 
[test@tcox3 Playbooks]$ cat mount.yml 
--- # MOUNT MODULE EXAMPLE
- hosts: appserver
  user: test
  sudo: yes
  connection: ssh
  gather_facts: no
  tasks:
    - name: mount the remote data partition
      mount: name=/mnt/data src=/dev/xvdf1 fstype=ext3 opts=rw state=present
 
4. Run the playbook and display the results.
[test@tcox3 Playbooks]$ ansible-playbook mount.yml 

PLAY [appserver] ************************************************************** 

TASK: [mount the remote data partition] *************************************** 
ok: [tcox5.mylabserver.com]

PLAY RECAP ******************************************************************** 
tcox5.mylabserver.com      : ok=1    changed=1    unreachable=0    failed=0