1. Verify that your ansible installation is available by displaying the version of ansible while logged in as the 'user' user.
[test@tcox3 ~]$ ansible --version
ansible 1.9.2
  configured module search path = None
 
2. Run the ansible command that lists all of the hosts configured in your control server 'hosts' file for the system.
[test@tcox3 ~]$ ansible all --list-hosts
    tcox5.mylabserver.com
    localhost
    tcox4.mylabserver.com
 
3. Create a playbook, using the 'filesystem' module that accomplishes the following:
- Uses SSH
- Logs in to the remote system as 'test' user
- Connects to all the hosts from Step #2 above
- The playbook runs as 'sudo'
- Skip gathering remote facts
- Format the remote filesystem device as an ext3 filesystem using the device path (not UUID or Label)
[test@tcox3 Playbooks]$ vim filesystem.yml 
[test@tcox3 Playbooks]$ cat filesystem.yml 
--- # FILESYSTEM MODULE EXAMPLE
- hosts: appserver
  user: test
  sudo: yes
  connection: ssh
  gather_facts: no
  tasks:
    - name: Format the remote data partition
      filesystem: fstype=ext3 dev=/dev/xvdf1
 
4. Run the playbook and display the results.
[test@tcox3 Playbooks]$ ansible-playbook filesystem.yml 

PLAY [appserver] ************************************************************** 

TASK: [Format the remote data partition] ************************************** 
ok: [tcox5.mylabserver.com]

PLAY RECAP ******************************************************************** 
tcox5.mylabserver.com      : ok=1    changed=1    unreachable=0    failed=0